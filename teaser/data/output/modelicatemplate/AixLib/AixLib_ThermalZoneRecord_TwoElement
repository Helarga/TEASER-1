<%namespace file="/modelica_language/" import="get_true_false, get_list, min_orientations"/> <%namespace file="/conversion/" import="deg_to_rad, azmiut_conv"/>
within ${zone.parent.parent.name}.${zone.parent.name}.${zone.parent.name}_DataBase;
record ${zone.parent.name}_${zone.name} "${zone.parent.name}_${zone.name}"
  extends AixLib.DataBase.ThermalZones.ZoneBaseRecord(
    T_start = ${zone.t_inside},
    withAirCap = ${get_true_false(zone.parent.library_attr.consider_heat_capacity)},
    VAir = ${zone.volume},
    AZone = ${zone.area},
    hRad = ${zone.model_attr.alpha_rad_inner_mean},
    lat = ${deg_to_rad(zone.parent.latitude)},
    nOrientations = ${min_orientations(zone.model_attr.n_outer)},
    AWin = ${get_list(zone.model_attr.window_areas)},
    ATransparent = ${get_list(zone.model_attr.transparent_areas)},
    hConWin = ${zone.model_attr.alpha_conv_inner_win},
    RWin = ${zone.model_attr.r1_win},
    gWin = ${zone.model_attr.weighted_g_value},
    UWin= ${zone.model_attr.u_value_win},
    ratioWinConRad = ${zone.model_attr.ratio_conv_rad_inner_win},
    AExt = ${get_list(zone.model_attr.facade_areas)},
    hConExtHeat = ${zone.model_attr.alpha_conv_inner_ow},
    hConExtCool = ${zone.heating_cooling_system.weighted_convection_inner_cool_ow},
    nExt = 1,
    RExt = {${zone.model_attr.r1_ow}},
    RExtRem = ${zone.model_attr.r_rest_ow} ,
    CExt = {${zone.model_attr.c1_ow}},
    AInt = ${zone.model_attr.area_iw},
    hConIntHeat = ${zone.model_attr.alpha_conv_inner_iw},
    hConIntCool = ${zone.heating_cooling_system.weighted_convection_inner_cool_iw},
    nInt = 1,
    RInt = {${zone.model_attr.r1_iw}},
    CInt = {${zone.model_attr.c1_iw}},
    AFloor = 0.0,
    hConFloor = 0.0,
    nFloor = 1,
    RFloor = {0.00001},
    RFloorRem =  0.00001,
    CFloor = {0.00001},
    ARoof = 0.0,
    hConRoof = 0.0,
    nRoof = 1,
    RRoof = {0.00001},
    RRoofRem = 0.00001,
    CRoof = {0.00001},
    nOrientationsRoof = 1,
    tiltRoof = {0.0},
    aziRoof = {0.0},
    wfRoof = {0.0},
    aRoof = 0.0,
    aExt = ${zone.model_attr.solar_absorp_ow},
    TSoil = ${zone.t_ground},
    hConWallOut = ${zone.model_attr.alpha_conv_outer_ow},
    hRadWall = ${zone.model_attr.alpha_rad_outer_mean},
    hConWinOut = ${zone.model_attr.alpha_conv_outer_win},
    hConRoofOut = 0.0,
    hRadRoof = 0.0,
    tiltExtWalls = ${get_list(deg_to_rad(zone.model_attr.tilt_facade))},
    aziExtWalls = ${get_list(azmiut_conv(zone.model_attr.orientation_facade))},
    wfWall = ${get_list(zone.model_attr.weightfactor_ow)},
    wfWin = ${get_list(zone.model_attr.weightfactor_win)},
    wfGro = ${zone.model_attr.weightfactor_ground},
    specificPeople = ${zone.use_conditions.persons},
    fixedHeatFlowRatePersons = ${zone.use_conditions.fixed_heat_flow_rate_persons},
    internalGainsMoistureNoPeople = ${zone.use_conditions.internal_gains_moisture_no_people},
    activityDegree = ${zone.use_conditions.activity_degree_persons},
    ratioConvectiveHeatPeople = ${zone.use_conditions.ratio_conv_rad_persons},
    internalGainsMachinesSpecific = ${zone.use_conditions.machines},
    ratioConvectiveHeatMachines = ${zone.use_conditions.ratio_conv_rad_machines},
    lightingPowerSpecific = ${zone.use_conditions.lighting_power},
    ratioConvectiveHeatLighting = ${zone.use_conditions.ratio_conv_rad_lighting},
    useConstantACHrate = ${get_true_false(zone.use_conditions.use_constant_infiltration)},
    baseACH = ${zone.use_conditions.infiltration_rate},
    maxUserACH = ${zone.use_conditions.max_user_infiltration},
    maxOverheatingACH = ${get_list(zone.use_conditions.max_overheating_infiltration)},
    maxSummerACH = ${get_list(zone.use_conditions.max_summer_infiltration)},
    winterReduction = ${get_list(zone.use_conditions.winter_reduction_infiltration)},
    maxIrr = ${get_list(zone.model_attr.shading_max_irr)},
    shadingFactor = ${get_list(zone.model_attr.shading_g_total)},
    withAHU = ${get_true_false(zone.use_conditions.with_ahu)},
    minAHU = ${zone.use_conditions.min_ahu},
    maxAHU = ${zone.use_conditions.max_ahu},
    hHeat = ${zone.model_attr.heat_load},
    lHeat = 0,
    KRHeat = 100,
    TNHeat = 50,
    HeaterOn = ${get_true_false(zone.use_conditions.with_heating)},
    hCool = 0,
    lCool = ${zone.model_attr.cool_load},
    KRCool = 10000,
    TNCool = 1,
    CoolerOn = ${get_true_false(zone.use_conditions.with_cooling)},
    withIdealThresholds = ${get_true_false(zone.use_conditions.with_ideal_thresholds)},
    TThresholdHeater = ${zone.use_conditions.T_threshold_heating},
    TThresholdCooler = ${zone.use_conditions.T_threshold_cooling},

    heating = ${get_true_false(zone.heating_cooling_system.heating)},
    cooling = ${get_true_false(zone.heating_cooling_system.cooling)},
    tabs = ${get_true_false(zone.heating_cooling_system.tabs)},
    floor = ${get_true_false(zone.heating_cooling_system.floor)},
    radiator = ${get_true_false(zone.heating_cooling_system.radiator)},
    ventilation = ${get_true_false(zone.heating_cooling_system.ventilation)},
    withTabsRoomTempControl = ${get_true_false(zone.heating_cooling_system.withTabsRoomTempControl)},

    TThresholdHeaterTabs = ${zone.heating_cooling_system.TThresholdHeaterTabs},
    TThresholdCoolerTabs = ${zone.heating_cooling_system.TThresholdCoolerTabs},
    powerHeatTabs = ${zone.heating_cooling_system.powerHeatTabs},
    powerCoolTabs = ${zone.heating_cooling_system.powerCoolTabs},

    KRHeatPanel = ${zone.heating_cooling_system.KRHeatPanel},
    TNHeatPanel = ${zone.heating_cooling_system.TNHeatPanel},
    hHeatPanel = ${zone.heating_cooling_system.hHeatPanel},
    lHeatPanel = ${zone.heating_cooling_system.lHeatPanel},

    KRCoolPanel = ${zone.heating_cooling_system.KRCoolPanel},
    TNCoolPanel = ${zone.heating_cooling_system.TNCoolPanel},
    hCoolPanel = ${zone.heating_cooling_system.hCoolPanel},
    lCoolPanel = ${zone.heating_cooling_system.lCoolPanel},

    KRHeatRem = ${zone.heating_cooling_system.KRHeatRem},
    TNHeatRem = ${zone.heating_cooling_system.TNHeatRem},
    hHeatRem = ${zone.heating_cooling_system.hHeatRem},
    lHeatRem = ${zone.heating_cooling_system.lHeatRem},

    KRCoolRem = ${zone.heating_cooling_system.KRCoolRem},
    TNCoolRem = ${zone.heating_cooling_system.TNCoolRem},
    hCoolRem = ${zone.heating_cooling_system.hCoolRem},
    lCoolRem = ${zone.heating_cooling_system.lCoolRem},

    KRHeatTABS = ${zone.heating_cooling_system.KRHeatTABS},
    TNHeatTABS = ${zone.heating_cooling_system.TNHeatTABS},
    hHeatTABS = ${zone.heating_cooling_system.hHeatTABS},
    lHeatTABS = ${zone.heating_cooling_system.lHeatTABS},

    KRCoolTABS = ${zone.heating_cooling_system.KRCoolTABS},
    TNCoolTABS = ${zone.heating_cooling_system.TNCoolTABS},
    hCoolTABS = ${zone.heating_cooling_system.hCoolTABS},
    lCoolTABS = ${zone.heating_cooling_system.lCoolTABS},

    shareHeatTabsExt = ${zone.heating_cooling_system.shareHeatTabsExt},
    shareHeatTabsInt = ${zone.heating_cooling_system.shareHeatTabsInt},
    shareHeatPanelExt = ${zone.heating_cooling_system.shareHeatPanelExt},
    shareHeatPanelInt = ${zone.heating_cooling_system.shareHeatPanelInt},
    shareHeatRad = ${zone.heating_cooling_system.shareHeatRad},
    shareHeatConv = ${zone.heating_cooling_system.shareHeatConv},
    shareCoolTabsExt = ${zone.heating_cooling_system.shareCoolTabsExt},
    shareCoolTabsInt = ${zone.heating_cooling_system.shareCoolTabsInt},
    shareCoolPanelExt = ${zone.heating_cooling_system.shareCoolPanelExt},
    shareCoolPanelInt = ${zone.heating_cooling_system.shareCoolPanelInt},
    shareCoolRad = ${zone.heating_cooling_system.shareCoolRad},
    shareCoolConv = ${zone.heating_cooling_system.shareCoolConv});
end ${zone.parent.name}_${zone.name};
